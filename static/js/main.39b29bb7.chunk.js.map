{"version":3,"sources":["components/navbar/index.js","components/footer/index.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","className","href","type","id","style","color","Footer","App","useState","playerChoice","setPlayerChoice","compChoice","setCompChoice","result","setResult","options","computerGuess","randomOption","Math","floor","random","length","useEffect","map","option","index","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAwEeA,EAtEA,SAAAC,GAAK,OACpB,qBAAKC,UAAU,0BAAf,SACA,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeC,KAAK,OAAjC,SACG,MAEH,wBACED,UAAU,iBACVE,KAAK,SACL,iBAAe,WACf,iBAAe,aACf,gBAAc,YACd,gBAAc,QACd,aAAW,oBAPb,SASE,sBAAMF,UAAU,0BAElB,qBAAKA,UAAU,2BAA2BG,GAAG,YAA7C,SACE,qBAAIH,UAAU,aAAd,UACE,oBAAIA,UAAU,WAAd,SACE,mBACEI,MAAO,CAAEC,MAAO,aAChBL,UAAU,WACV,eAAa,OACbC,KAAK,8BAJP,oBASF,oBAAID,UAAU,WAAd,SACE,mBACEI,MAAO,CAAEC,MAAO,aAChBL,UAAU,WACVC,KAAK,sCAHP,wBAQF,oBAAID,UAAU,WAAd,SACE,mBACEI,MAAO,CAAEC,MAAO,aAChBL,UAAU,WACVC,KAAK,mCAHP,qBAQF,oBAAID,UAAU,WAAd,SACE,mBACEI,MAAO,CAAEC,MAAO,aAChBL,UAAU,WACVC,KAAK,qCAHP,uBAQF,oBAAID,UAAU,WAAd,SACE,mBACEI,MAAO,CAAEC,MAAO,aAChBL,UAAU,WACVC,KAAK,mCAHP,gCC9COK,EAXA,SAAAP,GACb,OACE,yBAAQC,UAAU,oCAAlB,2BAEE,oBAAGA,UAAU,WAAWC,KAAK,sBAA7B,UACG,IADH,cCoESM,G,MArEH,WAGV,MAAsCC,mBAAS,MAA/C,mBAAKC,EAAL,KAAmBC,EAAnB,KACA,EAAkCF,mBAAS,MAA3C,mBAAKG,EAAL,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,MAAnC,mBAAKK,EAAL,KAAaC,EAAb,KAEIC,EAAU,CAAC,OAAQ,QAAS,YAS5BC,EAAgB,WAClB,IAAIC,EAAeF,EAAQG,KAAKC,MAAMD,KAAKE,SAAWL,EAAQM,SAC9DT,EAAcK,IA0BhB,OAvBAK,qBACE,WACE,OAAQb,EAAeE,GACrB,IAAK,gBACL,IAAK,eACL,IAAK,YACHG,EAAU,YACV,MACF,IAAK,gBACL,IAAK,eACL,IAAK,YACHA,EAAU,aACV,MACF,IAAK,WACL,IAAK,aACL,IAAK,mBACHA,EAAU,kBAIhB,CAACH,EAAYF,IAIb,gCACE,cAAC,EAAD,IAEA,sBAAKT,UAAU,mCAAf,UACGe,EAAQQ,KAAI,SAACC,EAAQC,GAAT,OACX,wBAAoBC,QAAS,kBAvCnChB,EAuCqDc,QAtCrDR,KAsCM,SACGQ,GADUC,MAIf,6CACchB,KAEd,8CACeE,KAEf,6BACGE,OAGL,cAAC,EAAD,SCzDSc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.39b29bb7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst NavBar = props =>\r\n<nav className=\"navbar navbar-expand-lg\">\r\n<div className=\"container-fluid\">\r\n  <a className=\"navbar-brand\" href=\"this\">\r\n    {\" \"}\r\n  </a>\r\n  <button\r\n    className=\"navbar-toggler\"\r\n    type=\"button\"\r\n    data-bs-toggle=\"collapse\"\r\n    data-bs-target=\"#navbarNav\"\r\n    aria-controls=\"navbarNav\"\r\n    aria-expanded=\"false\"\r\n    aria-label=\"Toggle navigation\"\r\n  >\r\n    <span className=\"navbar-toggler-icon\" />\r\n  </button>\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n    <ul className=\"navbar-nav\">\r\n      <li className=\"nav-item\">\r\n        <a\r\n          style={{ color: \"gainsboro\" }}\r\n          className=\"nav-link\"\r\n          aria-current=\"page\"\r\n          href=\"https://ljaimess.github.io/\"\r\n        >\r\n          Home\r\n        </a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a\r\n          style={{ color: \"gainsboro\" }}\r\n          className=\"nav-link\"\r\n          href=\"https://ljaimess.github.io/projects\"\r\n        >\r\n          Projects\r\n        </a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a\r\n          style={{ color: \"gainsboro\" }}\r\n          className=\"nav-link\"\r\n          href=\"https://ljaimess.github.io/about\"\r\n        >\r\n          About\r\n        </a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a\r\n          style={{ color: \"gainsboro\" }}\r\n          className=\"nav-link\"\r\n          href=\"https://ljaimess.github.io/contact\"\r\n        >\r\n          Contact\r\n        </a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a\r\n          style={{ color: \"gainsboro\" }}\r\n          className=\"nav-link\"\r\n          href=\"https://ljaimess.github.io/links\"\r\n        >\r\n          Links\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n</nav>;\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nconst Footer = props => {\r\n  return (\r\n    <footer className=\"footer-copyright text-center py-3\">\r\n      Nothing to see\r\n      <a className=\"hereLink\" href=\"https://google.com/\">\r\n        {\" \"}here\r\n      </a>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { React, useState, useEffect } from \"react\";\nimport NavBar from \"./components/navbar\";\nimport Footer from \"./components/footer\";\nimport \"./App.css\";\n\nconst App = () => {\n  // here the players choice, computers choice and results are being set as \"nothing\"(the null is doing this).\n  // the \"set\"(players, comp and result) is being updated by handleClick as a \"value\" and pushed into the their corresponding variable container.\n  let [playerChoice, setPlayerChoice] = useState(null);\n  let [compChoice, setCompChoice] = useState(null);\n  let [result, setResult] = useState(null);\n  //the array that holds the values\n  let options = [\"rock\", \"paper\", \"scissors\"];\n\n  //handles the click and sets the playerChoice as the value that the player chooses\n  let handleClick = value => {\n    setPlayerChoice(value);\n    computerGuess();\n  };\n\n  //the options is being randomized and being set as the CompChoice as the randomOption\n  let computerGuess = () => {\n    let randomOption = options[Math.floor(Math.random() * options.length)];\n    setCompChoice(randomOption);\n  };\n\n  useEffect(\n    () => {\n      switch (playerChoice + compChoice) {\n        case \"scissorspaper\":\n        case \"rockscissors\":\n        case \"paperrock\":\n          setResult(\"YOU WIN!\");\n          break;\n        case \"paperscissors\":\n        case \"scissorsrock\":\n        case \"rockpaper\":\n          setResult(\"YOU LOSE!\");\n          break;\n        case \"rockrock\":\n        case \"paperpaper\":\n        case \"scissorsscissors\":\n          setResult(\"ITS A DRAW!\");\n          break;\n      }\n    },\n    [compChoice, playerChoice]\n  );\n\n  return (\n    <div>\n      <NavBar />\n\n      <div className=\"jumbotron jumbotron-fluid header\">\n        {options.map((option, index) =>\n          <button key={index} onClick={() => handleClick(option)}>\n            {option}\n          </button>\n        )}\n        <h2>\n          You chose: {playerChoice}\n        </h2>\n        <h2>\n          They chose: {compChoice}\n        </h2>\n        <h1>\n          {result}\n        </h1>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}