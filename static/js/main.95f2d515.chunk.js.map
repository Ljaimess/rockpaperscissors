{"version":3,"sources":["components/navbar/index.js","components/footer/index.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","style","color","className","type","id","href","Footer","App","useState","playerChoice","setPlayerChoice","compChoice","setCompChoice","result","setResult","options","computerGuess","randomOption","Math","floor","random","length","useEffect","map","option","index","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAuBeA,EArBA,SAAAC,GAAK,OAChB,qBAAKC,MAAO,CAAEC,MAAO,SAAWC,UAAU,yCAA1C,SACI,sBAAKA,UAAU,kBAAf,UAEI,wBAAQA,UAAU,iBAAiBC,KAAK,SAAS,iBAAe,WAAW,iBAAe,sBAAsB,gBAAc,qBAAqB,gBAAc,QAAQ,aAAW,oBAApL,SACI,sBAAMD,UAAU,0BAEpB,qBAAKA,UAAU,2BAA2BE,GAAG,qBAA7C,SACI,sBAAKF,UAAU,aAAf,UACI,mBAAGF,MAAO,CAAEC,MAAO,aAAeC,UAAU,WAAW,eAAa,OAAOG,KAAK,8BAAhF,kBACA,mBAAGL,MAAO,CAAEC,MAAO,aAAeC,UAAU,WAAWG,KAAK,sCAA5D,sBACA,mBAAGL,MAAO,CAAEC,MAAO,aAAeC,UAAU,WAAWG,KAAK,mCAA5D,mBACA,mBAAGL,MAAO,CAAEC,MAAO,aAAeC,UAAU,WAAWG,KAAK,qCAA5D,qBACA,mBAAGL,MAAO,CAAEC,MAAO,aAAeC,UAAU,WAAWG,KAAK,mCAA5D,8BCALC,EAbA,SAAAP,GACX,OAGI,yBAAQG,UAAU,oCAAlB,2BAEI,mBAAGA,UAAU,WAAWG,KAAK,sBAA7B,uBCkEGE,G,MAnEH,WAIV,MAAsCC,mBAAS,MAA/C,mBAAKC,EAAL,KAAmBC,EAAnB,KACA,EAAkCF,mBAAS,MAA3C,mBAAKG,EAAL,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,MAAnC,mBAAKK,EAAL,KAAaC,EAAb,KAEIC,EAAU,CAAC,OAAQ,QAAS,YAW5BC,EAAgB,WAClB,IAAIC,EAAeF,EAAQG,KAAKC,MAAMD,KAAKE,SAAWL,EAAQM,SAC9DT,EAAcK,IAyBhB,OAtBAK,qBAAU,WAEN,OAAQb,EAAeE,GACrB,IAAK,gBACL,IAAK,eACL,IAAK,YACHG,EAAU,YACV,MACF,IAAK,gBACL,IAAK,eACL,IAAK,YACHA,EAAU,aACV,MACF,IAAK,WACL,IAAK,aACL,IAAK,mBACHA,EAAU,kBAIf,CAACH,EAAYF,IAId,gCACE,cAAC,EAAD,IAEA,sBAAKP,UAAU,mCAAf,UACGa,EAAQQ,KAAI,SAACC,EAAQC,GAAT,OACX,wBAAoBC,QAAS,kBAxCnChB,EAwCqDc,QAvCrDR,KAuCM,SACGQ,GADUC,MAIf,6CAAgBhB,KAChB,8CAAiBE,KACjB,6BAAKE,OAEP,cAAC,EAAD,SCxDSc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.95f2d515.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst NavBar = props => (\r\n    <nav style={{ color: \"black\" }} className=\"navbar navbar-expand navbar-expand-lg \">\r\n        <div className=\"container-fluid\">\r\n\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                <div className=\"navbar-nav\">\r\n                    <a style={{ color: \"gainsboro\" }} className=\"nav-link\" aria-current=\"page\" href=\"https://ljaimess.github.io/\">Home</a>\r\n                    <a style={{ color: \"gainsboro\" }} className=\"nav-link\" href=\"https://ljaimess.github.io/projects\">Projects</a>\r\n                    <a style={{ color: \"gainsboro\" }} className=\"nav-link\" href=\"https://ljaimess.github.io/about\">About</a>\r\n                    <a style={{ color: \"gainsboro\" }} className=\"nav-link\" href=\"https://ljaimess.github.io/contact\">Contact</a>\r\n                    <a style={{ color: \"gainsboro\" }} className=\"nav-link\" href=\"https://ljaimess.github.io/links\">Links</a>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n);\r\n\r\nexport default NavBar;\r\n\r\n","import React from \"react\";\r\n\r\nconst Footer = props => {\r\n    return (\r\n\r\n\r\n        <footer className=\"footer-copyright text-center py-3\">\r\n            Nothing to see\r\n            <a className=\"hereLink\" href=\"https://google.com/\"> here</a>\r\n\r\n        </footer>\r\n\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n\r\n","import { React, useState, useEffect } from 'react';\nimport NavBar from \"./components/navbar\";\nimport Footer from \"./components/footer\";\nimport './App.css';\n\n\n\nconst App = () => {\n\n  // here the players choice, computers choice and results are being set as \"nothing\"(the null is doing this).\n  // the \"set\"(players, comp and result) is being updated by handleClick as a \"value\" and pushed into the their corresponding variable container.\n  let [playerChoice, setPlayerChoice] = useState(null);\n  let [compChoice, setCompChoice] = useState(null);\n  let [result, setResult] = useState(null);\n  //the array that holds the values\n  let options = [\"rock\", \"paper\", \"scissors\"];\n  \n\n  //handles the click and sets the playerChoice as the value that the player chooses\n  let handleClick = (value) => {\n    setPlayerChoice(value);\n    computerGuess()\n\n  };\n\n  //the options is being randomized and being set as the CompChoice as the randomOption\n  let computerGuess = () => {\n    let randomOption = options[Math.floor(Math.random() * options.length)];\n    setCompChoice(randomOption)\n  };\n\n  useEffect(() => {\n    \n      switch (playerChoice + compChoice) {\n        case 'scissorspaper':\n        case 'rockscissors':\n        case 'paperrock':\n          setResult('YOU WIN!')\n          break\n        case 'paperscissors':\n        case 'scissorsrock':\n        case 'rockpaper':\n          setResult('YOU LOSE!')\n          break\n        case 'rockrock':\n        case 'paperpaper':\n        case 'scissorsscissors':\n          setResult('ITS A DRAW!')\n          break\n      }\n    \n  }, [compChoice, playerChoice])\n\n  return (\n\n    <div>\n      <NavBar />\n\n      <div className=\"jumbotron jumbotron-fluid header\">\n        {options.map((option, index) =>\n          <button key={index} onClick={() => handleClick(option)}>\n            {option}\n          </button>\n        )}\n        <h2>You chose: {playerChoice}</h2>\n        <h2>They chose: {compChoice}</h2>\n        <h1>{result}</h1>\n      </div>\n      <Footer />\n    </div>\n\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}